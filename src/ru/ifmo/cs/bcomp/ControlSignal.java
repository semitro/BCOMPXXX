package ru.ifmo.cs.bcomp;


public enum ControlSignal {

   HALT("HALT", 0),
   DATA_TO_ALU("DATA_TO_ALU", 1),
   INSTR_TO_ALU("INSTR_TO_ALU", 2),
   IP_TO_ALU("IP_TO_ALU", 3),
   ACCUM_TO_ALU("ACCUM_TO_ALU", 4),
   STATE_TO_ALU("STATE_TO_ALU", 5),
   KEY_TO_ALU("KEY_TO_ALU", 6),
   INVERT_LEFT("INVERT_LEFT", 7),
   INVERT_RIGHT("INVERT_RIGHT", 8),
   ALU_AND("ALU_AND", 9),
   ALU_PLUS_1("ALU_PLUS_1", 10),
   SHIFT_RIGHT("SHIFT_RIGHT", 11),
   SHIFT_LEFT("SHIFT_LEFT", 12),
   BUF_TO_STATE_C("BUF_TO_STATE_C", 13),
   BUF_TO_STATE_N("BUF_TO_STATE_N", 14),
   BUF_TO_STATE_Z("BUF_TO_STATE_Z", 15),
   CLEAR_STATE_C("CLEAR_STATE_C", 16),
   SET_STATE_C("SET_STATE_C", 17),
   BUF_TO_ADDR("BUF_TO_ADDR", 18),
   BUF_TO_DATA("BUF_TO_DATA", 19),
   BUF_TO_INSTR("BUF_TO_INSTR", 20),
   BUF_TO_IP("BUF_TO_IP", 21),
   BUF_TO_ACCUM("BUF_TO_ACCUM", 22),
   MEMORY_READ("MEMORY_READ", 23),
   MEMORY_WRITE("MEMORY_WRITE", 24),
   INPUT_OUTPUT("INPUT_OUTPUT", 25),
   CLEAR_ALL_FLAGS("CLEAR_ALL_FLAGS", 26),
   DISABLE_INTERRUPTS("DISABLE_INTERRUPTS", 27),
   ENABLE_INTERRUPTS("ENABLE_INTERRUPTS", 28),
   SET_RUN_STATE("SET_RUN_STATE", 29),
   SET_PROGRAM("SET_PROGRAM", 30),
   SET_REQUEST_INTERRUPT("SET_REQUEST_INTERRUPT", 31),
   IO0_TSF("IO0_TSF", 32),
   IO1_SETFLAG("IO1_SETFLAG", 33),
   IO1_TSF("IO1_TSF", 34),
   IO1_OUT("IO1_OUT", 35),
   IO2_SETFLAG("IO2_SETFLAG", 36),
   IO2_TSF("IO2_TSF", 37),
   IO2_IN("IO2_IN", 38),
   IO3_SETFLAG("IO3_SETFLAG", 39),
   IO3_TSF("IO3_TSF", 40),
   IO3_IN("IO3_IN", 41),
   IO3_OUT("IO3_OUT", 42),
   IO7_IN("IO7_IN", 43),
   IO8_IN("IO8_IN", 44),
   IO9_IN("IO9_IN", 45);
   // $FF: synthetic field
   private static final ControlSignal[] $VALUES = new ControlSignal[]{HALT, DATA_TO_ALU, INSTR_TO_ALU, IP_TO_ALU, ACCUM_TO_ALU, STATE_TO_ALU, KEY_TO_ALU, INVERT_LEFT, INVERT_RIGHT, ALU_AND, ALU_PLUS_1, SHIFT_RIGHT, SHIFT_LEFT, BUF_TO_STATE_C, BUF_TO_STATE_N, BUF_TO_STATE_Z, CLEAR_STATE_C, SET_STATE_C, BUF_TO_ADDR, BUF_TO_DATA, BUF_TO_INSTR, BUF_TO_IP, BUF_TO_ACCUM, MEMORY_READ, MEMORY_WRITE, INPUT_OUTPUT, CLEAR_ALL_FLAGS, DISABLE_INTERRUPTS, ENABLE_INTERRUPTS, SET_RUN_STATE, SET_PROGRAM, SET_REQUEST_INTERRUPT, IO0_TSF, IO1_SETFLAG, IO1_TSF, IO1_OUT, IO2_SETFLAG, IO2_TSF, IO2_IN, IO3_SETFLAG, IO3_TSF, IO3_IN, IO3_OUT, IO7_IN, IO8_IN, IO9_IN};


   private ControlSignal(String var1, int var2) {}

}
